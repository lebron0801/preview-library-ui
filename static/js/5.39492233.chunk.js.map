{"version":3,"sources":["config/default.config.ts","assets/images/logo.svg","pages/business/Account/AccountCenter.tsx","pages/business/Account/AccountSetting.tsx","pages/business/Attendance/AttendanceList.tsx","pages/business/Attendance/AttendanceManage.tsx","pages/business/Attendance/AttendancePeriod.tsx","pages/business/Attendance/AttendanceRecord.tsx","pages/business/Dashboard/Analysis.tsx","pages/business/Dashboard/WorkStation.tsx","pages/business/FormPage/BaseForm.tsx","pages/business/FormPage/SeniorForm.tsx","pages/business/ListPage/CardList.tsx","pages/business/ListPage/QueryList.tsx","pages/business/ReportPage/OtherReport.tsx","pages/business/ReportPage/UserReport/UserAttendanceReport.tsx","pages/business/ReportPage/UserReport/UserInfoReport.tsx","pages/business/Scheduling/SchedulingList.tsx","pages/business/Scheduling/SchedulingPublish.tsx","pages/business/UserCenter/UserList.tsx","pages/business/UserCenter/UserManage.tsx","components/container/Test1.tsx","pages/business/Scheduling/SchedulingManage.tsx","utils/merge.ts","request/index.ts","apis/business.ts","assets/images/avatar.png","pages/business sync /.tsx$","pages lazy /^/business.*$/ groupOptions: {} namespace object","routers/RouterConfig.ts","assets/iconfont/IconFont.ts","layouts/Header.tsx","routers/AutoImport.ts","routers/RouterTransform.ts","routers/FrontendAuth.tsx","layouts/Content.tsx","components/container/Scrollbars.tsx","layouts/Sider.tsx","layouts/FrameworkBase.tsx","pages/framework/Index.tsx"],"names":["Size","lang","homePage","iconfontUrl","theme","navMode","primaryColor","fixedHeader","fixSiderbar","headerHeight","siderbarTheme","topbarTheme","dark","multiTab","AccountCenter","className","React","Component","AccountSetting","AttendanceList","AttendanceManage","AttendancePeriod","AttendanceRecord","LoadableComponent","loadable","fallback","Analysis","props","componentDidCache","console","log","componentDidRecover","meta","keepAlive","cacheLifecycles","didCache","didRecover","WorkStation","updateDates","a","getUserInfo","name","age","state","configs","value","columns","title","dataIndex","key","dataSource","handleChange","bind","event","this","setState","target","onClick","style","marginLeft","placeholder","onChange","BaseForm","SeniorForm","CardList","QueryList","OtherReport","UserAttendanceReport","UserInfoReport","SchedulingList","user","updateUser","updateUserAsync","fetchUser","getUser","account","marginTop","mapDispatchToProps","connect","app","SchedulingPublish","render","record","defaultChecked","checked","updateDictDetail","enable","res","error","success","width","fetchDictDetail","id","currentIns","dictInfo","visible","status","defaultData","data","selectedDictId","dictForm","current","resetFields","type","okText","cancelText","onConfirm","destroyDictDetail","code","msg","currentCateId","cateInfo","selectedCateId","fetchDictDetails","cateId","pageSize","pageIndex","list","total","pageData","color","UserList","dictCateForm","createRef","dictGroupForm","onSelectChange","selectedRowKeys","cateList","groupInfo","selectedGroupId","getAllDict","fetchDict","rowSelection","flex","suffix","textAlign","length","image","PRESENTED_IMAGE_SIMPLE","bordered","ghost","defaultActiveKey","expandIcon","isActive","rotate","map","item","Panel","header","groupName","e","stopPropagation","fetchDictGroup","confirm","icon","content","onOk","destroyDictGroup","dictCateLists","sub","classnames","selected","cateName","fetchDictCate","destroyDictCate","padding","span","disabled","danger","destroiesDictDetails","ids","rowKey","size","pagination","position","defaultCurrent","defaultPageSize","showSizeChanger","showQuickJumper","pageSizeOptions","showTotal","page","submit","onCancel","ref","labelCol","wrapperCol","initialValues","sort","onFinish","values","createDictGroup","updateDictGroup","onFinishFailed","autoComplete","Item","label","validateTrigger","rules","required","message","min","max","valuePropName","TextArea","createDictCate","groupId","updateDictCate","createDictDetail","UserManage","socket","io","query","room","userId","reconnectionAttempts","transports","on","window","Test1","PureComponent","SchedulingManage","count","lebron","cb","isObject","Object","prototype","toString","call","merge","i","source","hasOwnProperty","common","getCommData","jwt","getToken","commHead","Authorization","token_type","access_token","baseConfig","clientId","sign","timestamp","Math","round","Date","options","method","headers","params","xhr","url","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","resolve","module","exports","webpackAsyncContext","Promise","then","config","nodeType","path","auth","childrens","IconFont","createFromIconfontCN","scriptUrl","logo","require","default","avatar","username","local","get","Header","selectedLang","store","getState","unsubscribe","refreshRouter","refreshByCacheKey","curCacheRoute","subscribe","menu","selectedKeys","minWidth","userInfo","centered","closable","clear","history","push","UserOutlined","SettingOutlined","Divider","LogoutOutlined","light","src","alt","mode","defaultSelectedKeys","RouterConfig","SubMenu","son","ReloadOutlined","SearchOutlined","QuestionCircleOutlined","BellOutlined","overlay","placement","fontSize","MoreOutlined","withRouter","forEach","fileName","split","reverse","substring","component","datas","recursion","routers","RouterTransform","NotFound","FrontendAuth","relationSideEffect","document","dispatch","setCurCacheRoute","pathname","location","to","currentRouter","AutoImport","find","when","cacheKey","exact","saveScrollPosition","Content","Scrollbars","routerScroll","renderThumbVertical","thumbVerticalLight","renderTrackVertical","trackVerticalLight","autoHide","bounds","onResize","contentRect","forceUpdate","measureRef","children","defaultProps","Sider","collapsed","onCollapsed","breakpoint","trigger","collapsible","collapsedWidth","onCollapse","defaultOpenKeys","arr","slice","inlineIndent","borderRight","selectable","createElement","MenuUnfoldOutlined","MenuFoldOutlined","FrameworkBase","collapsedHandle","height","minHeight","Index"],"mappings":"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","file":"static/js/5.39492233.chunk.js","sourcesContent":["enum Size {\n  light = 'light',\n  dark = 'dark'\n}\n\nexport default {\n  lang: 'zh',\n  homePage: '/Dashboard/Analysis', // 主页路由\n  iconfontUrl: '//at.alicdn.com/t/font_2362347_541noik27o4.js',\n  theme: {\n    navMode: 'top', // side 侧边 top 顶部\n    primaryColor: '', // 主色调\n    fixedHeader: false, // 是否固定头部\n    fixSiderbar: false, // 是否固定侧边栏\n    headerHeight: 48, // 头部高度\n    siderbarTheme: '', // 侧边栏主题 light or dark\n    topbarTheme: Size.dark // 顶部栏主题 light or dark\n  },\n  multiTab: false // 是否启用多页签方式，此时默认路由页面全部启用缓存，在非启用多页签下 通过路由配置keepAlive设置指定页面是否启用缓存\n};\n","export default __webpack_public_path__ + \"static/media/logo.f0355d39.svg\";","import React from 'react';\n\nclass AccountCenter extends React.Component {\n  render() {\n    return (\n      <div className=\"account-center-wrapper\">\n        <span>个人中心页面</span>\n      </div>\n    );\n  }\n}\n\nexport default AccountCenter;\n","import React from 'react';\n\nclass AccountSetting extends React.Component {\n  render() {\n    return (\n      <div className=\"account-setting-wrapper\">\n        <span>个人设置</span>\n      </div>\n    );\n  }\n}\n\nexport default AccountSetting;\n","import React from 'react';\n\nclass AttendanceList extends React.Component {\n  render() {\n    return (\n      <div className=\"attendance-list-wrapper\">\n        <span>考勤列表</span>\n      </div>\n    );\n  }\n}\n\nexport default AttendanceList;\n","import React from 'react';\n\nclass AttendanceManage extends React.Component {\n  render() {\n    return (\n      <div className=\"attendance-manage-wrapper\">\n        <span>考勤管理</span>\n      </div>\n    );\n  }\n}\n\nexport default AttendanceManage;\n","import React from 'react';\n\nclass AttendancePeriod extends React.Component {\n  render() {\n    return (\n      <div className=\"attendance-period-wrapper\">\n        <span>考勤期数</span>\n      </div>\n    );\n  }\n}\n\nexport default AttendancePeriod;\n","import React from 'react';\n\nclass AttendanceRecord extends React.Component {\n  render() {\n    return (\n      <div className=\"attendance-record-wrapper\">\n        <span>考勤记录</span>\n      </div>\n    );\n  }\n}\n\nexport default AttendanceRecord;\n","import React from 'react';\nimport { Spin } from 'antd';\nimport loadable from '@loadable/component';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { CacheRouteProps } from 'react-router-cache-route';\n\nconst LoadableComponent = loadable(() => import('@/components/function/Layout'), {\n  fallback: <Spin />\n});\n\ntype PropsType = RouteComponentProps & CacheRouteProps;\n\nclass Analysis extends React.Component<PropsType> {\n  constructor(props: PropsType) {\n    super(props);\n\n    if (props.meta.keepAlive) {\n      props.cacheLifecycles?.didCache(this.componentDidCache);\n      props.cacheLifecycles?.didRecover(this.componentDidRecover);\n    }\n  }\n\n  componentDidCache = () => {\n    console.log('List cached');\n  };\n\n  componentDidRecover = () => {\n    console.log('List recovered');\n  };\n\n  render() {\n    return (\n      <div className=\"analysis-wrapper\">\n        <LoadableComponent />\n      </div>\n    );\n  }\n}\n\nexport default Analysis;\n","import React from 'react';\nimport { Button, message, Table, Input } from 'antd';\nimport { getUserList, createUserForm, getUserInfo } from '@/apis/business';\n\ntype StateType = {\n  configs: number;\n  state?: boolean;\n  columns?: Array<any>;\n  value: string;\n  dataSource: any;\n};\n\nclass WorkStation extends React.Component<any, StateType> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      configs: 0,\n      state: false,\n      value: '',\n      columns: [\n        {\n          title: '姓名',\n          dataIndex: 'name',\n          key: 'name'\n        },\n        {\n          title: '邮箱',\n          dataIndex: 'email',\n          key: 'email'\n        },\n        {\n          title: '密码',\n          dataIndex: 'passwd',\n          key: 'passwd'\n        }\n      ],\n      dataSource: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async componentDidMount() {\n    /* const res = await getUserList({});\n\t\tthis.setState({\n\t\t\tdataSource: res.data\n\t\t}); */\n  }\n\n  /**\n   * 更新数据\n   */\n  updateDates = async () => {\n    const res = await getUserInfo({ name: '张三', age: 23 });\n    /* const res = await deleteUserRecord({ ids: ['2c5aa916-ab61-47ef-a923-2143bd31eb88'] });\n\t\tif (res.code === 200) {\n\t\t\tmessage.success(res.msg);\n\t\t} else {\n\t\t\tmessage.error(res.msg);\n\t\t} */\n    /* this.setState((state) => {\n\t\t\treturn {\n\t\t\t\tconfigs: state.configs + 1\n\t\t\t};\n\t\t}); */\n    /* const res = await createUserForm({\n\t\t\temail: 'cheng.wang@coho.com.cn',\n\t\t\tpasswd: '122321',\n\t\t\tname: '王城',\n\t\t\tgender: true\n\t\t});\n\n\t\tif (res.code === 200) {\n\t\t\tmessage.success(res.msg);\n\t\t} else {\n\t\t\tmessage.error(res.msg);\n\t\t} */\n  };\n\n  handleChange(event: any) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"workstation-wrapper\">\n        <span>{this.state.configs}</span>\n        <Button onClick={this.updateDates} style={{ marginLeft: 10 }}>\n          更新\n        </Button>\n        <Input placeholder=\"Basic usage\" value={this.state.value} onChange={this.handleChange} />\n        <Table dataSource={this.state.dataSource} columns={this.state.columns} />\n      </div>\n    );\n  }\n}\n\nexport default WorkStation;\n","import React from 'react';\n\nclass BaseForm extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div className=\"base-form-wrapper\">\n        <span>基础表单</span>\n      </div>\n    );\n  }\n}\n\nexport default BaseForm;\n","import React from 'react';\n\nclass SeniorForm extends React.Component {\n  render() {\n    return (\n      <div className=\"senior-form-wrapper\">\n        <span>高级表单页面</span>\n      </div>\n    );\n  }\n}\n\nexport default SeniorForm;\n","import React from 'react';\n\nclass CardList extends React.Component {\n  render() {\n    return (\n      <div className=\"card-list-wrapper\">\n        <span>卡片列表页面</span>\n      </div>\n    );\n  }\n}\n\nexport default CardList;\n","import React from 'react';\n\nclass QueryList extends React.Component {\n  render() {\n    return (\n      <div className=\"query-list-wrapper\">\n        <span>查询列表页面</span>\n      </div>\n    );\n  }\n}\n\nexport default QueryList;\n","import React from 'react';\n\nclass OtherReport extends React.Component {\n  render() {\n    return (\n      <div className=\"other-report-wrapper\">\n        <span>其他报表</span>\n      </div>\n    );\n  }\n}\n\nexport default OtherReport;\n","import React from 'react';\n\nclass UserAttendanceReport extends React.Component {\n  render() {\n    return (\n      <div className=\"user-attendance-report-wrapper\">\n        <span>人员出勤报表</span>\n      </div>\n    );\n  }\n}\n\nexport default UserAttendanceReport;\n","import React from 'react';\n\nclass UserInfoReport extends React.Component {\n  render() {\n    return (\n      <div className=\"user-info-report-wrapper\">\n        <span>人员信息报表</span>\n      </div>\n    );\n  }\n}\n\nexport default UserInfoReport;\n","import React from 'react';\nimport { Button } from 'antd';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateUser, updateUserAsync, fetchUser, getUser, ActionCreatorFunc } from '@/store/actions';\nimport { ReduxStateInterface } from '@/store/reducers';\n\ntype PropsType = ActionCreatorFunc & ReduxStateInterface & RouteComponentProps;\n\nclass SchedulingList extends React.Component<PropsType> {\n  render() {\n    const { user, updateUser, updateUserAsync, fetchUser, getUser } = this.props;\n\n    return (\n      <div className=\"scheduling-list-wrapper\">\n        <span>排班列表：</span>\n        <span>{user.account}</span>\n        <div style={{ marginTop: 20 }}>\n          <Button onClick={updateUser.bind(this, { account: 'lebron' })}>同步更新</Button>\n          <Button onClick={updateUserAsync}>异步更新</Button>\n          <Button onClick={fetchUser}>获取</Button>\n          <Button onClick={getUser}>查询</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n * 将管理器中状态数据按需映射到当前组件中\n * @param state 状态管理器全量数据\n */\nconst mapStateToProps = (state: ReduxStateInterface) => {\n  return {\n    user: state.user,\n    app: state.app\n  };\n};\n\n// 将管理器中dispatch函数映射到当前组件中，支持对象和函数方式\nconst mapDispatchToProps = { updateUser, updateUserAsync, fetchUser, getUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SchedulingList);\n","import React from 'react';\n\nclass SchedulingPublish extends React.Component {\n  render() {\n    return (\n      <div className=\"scheduling-publish-wrapper\">\n        <span>排班发布</span>\n      </div>\n    );\n  }\n}\n\nexport default SchedulingPublish;\n","import React from 'react';\nimport {\n  Button,\n  message,\n  Table,\n  Input,\n  Row,\n  Col,\n  Collapse,\n  Space,\n  Tooltip,\n  Switch,\n  Divider,\n  Popconfirm,\n  Modal,\n  Form,\n  InputNumber,\n  Empty\n} from 'antd';\nimport '@/assets/less/business/UserList.less';\nimport {\n  CaretRightOutlined,\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  SearchOutlined,\n  ExclamationCircleOutlined\n} from '@ant-design/icons';\nimport {\n  fetchDict,\n  fetchDictDetails,\n  createDictDetail,\n  updateDictDetail,\n  fetchDictDetail,\n  destroyDictDetail,\n  fetchDictCate,\n  updateDictCate,\n  createDictCate,\n  destroyDictCate,\n  fetchDictGroup,\n  createDictGroup,\n  updateDictGroup,\n  destroiesDictDetails,\n  destroyDictGroup\n} from '@/apis/business';\nimport classnames from 'classnames';\nimport { FormInstance } from 'antd/es/form';\n\ntype StateType = {\n  cateList: Array<any>;\n  // 当前字典分类\n  currentCateId: '';\n  // 字典列表数据\n  dataSource: Array<any>;\n  // 列表总条数\n  total: number;\n  // 分类弹出框信息\n  cateInfo: any;\n  // 分组弹出框信息\n  groupInfo: any;\n  // 字典弹出框信息\n  dictInfo: any;\n  // 选中的列表项\n  selectedRowKeys: Array<any>;\n};\n\nconst columns = [\n  {\n    title: '字典名称',\n    dataIndex: 'dictName',\n    key: 'dictName'\n  },\n  {\n    title: '字典值',\n    dataIndex: 'dictValue',\n    key: 'dictValue'\n  },\n  {\n    title: '是否启用',\n    dataIndex: 'enable',\n    key: 'enable',\n    render: (state: boolean, record: any) => (\n      <Switch\n        defaultChecked={state}\n        onChange={async (checked: boolean) => {\n          const res = await updateDictDetail({ ...record, enable: checked });\n\n          if (res.error) {\n            message.error(res.error);\n          } else {\n            message.success('更新成功');\n          }\n        }}\n      />\n    )\n  },\n  {\n    title: '操作',\n    key: 'action',\n    width: '120px',\n    render: (record: any) => (\n      <>\n        <a\n          onClick={async () => {\n            const res = await fetchDictDetail(record.id);\n\n            currentIns.setState(\n              {\n                dictInfo: {\n                  ...currentIns.state.dictInfo,\n                  visible: true,\n                  title: '编辑字典',\n                  status: 'edit',\n                  defaultData: res.data,\n                  selectedDictId: res.data.id\n                }\n              },\n              () => {\n                currentIns.dictForm.current!.resetFields();\n              }\n            );\n          }}\n        >\n          编辑\n        </a>\n        <Divider type=\"vertical\" />\n        <Popconfirm\n          title=\"确定删除？\"\n          okText=\"是\"\n          cancelText=\"否\"\n          onConfirm={async () => {\n            const res = await destroyDictDetail(record.id);\n\n            if (res.code === 200) {\n              message.success(res.msg);\n\n              if (currentIns.state.currentCateId === currentIns.state.cateInfo.selectedCateId) {\n                const list = await fetchDictDetails(\n                  { cateId: currentIns.state.currentCateId },\n                  { pageSize: 10, pageIndex: 1 }\n                );\n\n                if (list.code === 200) {\n                  currentIns.setState({\n                    dataSource: list.data.list,\n                    total: list.data.pageData.total\n                  });\n                } else {\n                  message.error(list.msg);\n                }\n              }\n            } else {\n              message.error(res.msg);\n            }\n          }}\n        >\n          <a style={{ color: 'red' }}>删除</a>\n        </Popconfirm>\n      </>\n    )\n  }\n];\n\nlet currentIns: any = null;\n\nclass UserList extends React.Component<any, StateType> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      currentCateId: '',\n      cateList: [],\n      dataSource: [],\n      total: 0,\n      cateInfo: {\n        visible: false,\n        defaultData: null,\n        title: '新增分类',\n        selectedCateId: '',\n        status: 'add'\n      },\n      groupInfo: {\n        visible: false,\n        defaultData: null,\n        title: '新增分组',\n        selectedGroupId: '',\n        status: 'add'\n      },\n      dictInfo: {\n        visible: false,\n        defaultData: null,\n        title: '新增字典',\n        selectedDictId: '',\n        status: 'add'\n      },\n      selectedRowKeys: []\n    };\n  }\n\n  // 字典分类表单实例\n  dictCateForm: any = React.createRef<FormInstance>();\n\n  // 字典分组表单实例\n  dictGroupForm: any = React.createRef<FormInstance>();\n\n  // 字典表单实例\n  dictForm: any = React.createRef<FormInstance>();\n\n  onSelectChange = (selectedRowKeys: Array<any>) => {\n    this.setState({ selectedRowKeys });\n  };\n\n  async componentDidMount() {\n    this.getAllDict();\n    currentIns = this;\n  }\n\n  // 页面加载获取字典全量数据\n  async getAllDict() {\n    const res = await fetchDict();\n\n    if (res.code === 200) {\n      this.setState({ cateList: res.data });\n    } else {\n      message.error(res.msg);\n    }\n  }\n\n  render() {\n    const { selectedRowKeys } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange\n    };\n\n    return (\n      <div className=\"user-list-wrapper\">\n        <div className=\"wrapper-body\">\n          <div className=\"left\">\n            <div className=\"search\">\n              <Row>\n                <Col flex=\"1\">\n                  <Input placeholder=\"请输入\" suffix={<SearchOutlined />} />\n                </Col>\n                <Col flex=\"100px\" style={{ textAlign: 'right' }}>\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                      this.setState(\n                        {\n                          groupInfo: {\n                            ...this.state.groupInfo,\n                            visible: true,\n                            title: '新增分组',\n                            status: 'add'\n                          }\n                        },\n                        () => {\n                          this.dictGroupForm.current!.resetFields();\n                        }\n                      );\n                    }}\n                  >\n                    新增分组\n                  </Button>\n                </Col>\n              </Row>\n            </div>\n            <div className=\"list\">\n              {this.state.cateList.length === 0 && <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />}\n              <Collapse\n                bordered={false}\n                ghost\n                defaultActiveKey={['1']}\n                expandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\n                className=\"site-collapse-custom-collapse\"\n              >\n                {this.state.cateList.map((item: any) => {\n                  return (\n                    <Collapse.Panel\n                      header={\n                        <>\n                          <span>{item.groupName}</span>\n                          <Space className=\"opt-icon\">\n                            <Tooltip title=\"新增字典分类\">\n                              <PlusOutlined\n                                className=\"opt-icon-sub\"\n                                onClick={(e: any) => {\n                                  e.stopPropagation();\n\n                                  this.setState(\n                                    {\n                                      cateInfo: {\n                                        ...this.state.cateInfo,\n                                        visible: true,\n                                        title: '新增分类',\n                                        status: 'add'\n                                      },\n                                      groupInfo: {\n                                        ...this.state.groupInfo,\n                                        selectedGroupId: item.id\n                                      }\n                                    },\n                                    () => {\n                                      this.dictCateForm.current!.resetFields();\n                                    }\n                                  );\n                                }}\n                              />\n                            </Tooltip>\n                            <Tooltip title=\"编辑分组\">\n                              <EditOutlined\n                                className=\"opt-icon-sub\"\n                                onClick={async (e: any) => {\n                                  e.stopPropagation();\n\n                                  const res = await fetchDictGroup(item.id);\n\n                                  if (res.code === 200) {\n                                    this.setState(\n                                      {\n                                        groupInfo: {\n                                          ...this.state.groupInfo,\n                                          visible: true,\n                                          title: '编辑分组',\n                                          defaultData: res.data,\n                                          selectedGroupId: item.id,\n                                          status: 'edit'\n                                        }\n                                      },\n                                      () => {\n                                        this.dictGroupForm.current!.resetFields();\n                                      }\n                                    );\n                                  }\n                                }}\n                              />\n                            </Tooltip>\n                            <Tooltip title=\"删除分组\">\n                              <DeleteOutlined\n                                className=\"opt-icon-sub\"\n                                onClick={(e: any) => {\n                                  e.stopPropagation();\n\n                                  Modal.confirm({\n                                    icon: <ExclamationCircleOutlined />,\n                                    content: '删除此分组，会删除分组下的所有数据，确定删除？',\n                                    okText: '确认',\n                                    cancelText: '取消',\n                                    onOk: async () => {\n                                      const res = await destroyDictGroup(item.id);\n\n                                      if (res.code === 200) {\n                                        message.success(res.msg);\n                                        this.getAllDict();\n\n                                        if (item.id === this.state.groupInfo.selectedGroupId) {\n                                          this.setState({\n                                            dataSource: []\n                                          });\n                                        }\n                                      } else {\n                                        message.error(res.msg);\n                                      }\n                                    }\n                                  });\n                                }}\n                              />\n                            </Tooltip>\n                          </Space>\n                        </>\n                      }\n                      key={item.id}\n                      className=\"site-collapse-custom-panel\"\n                    >\n                      {item.dictCateLists.map((sub: any) => {\n                        return (\n                          <div\n                            className={classnames('dict-cate', {\n                              selected: sub.id === this.state.cateInfo.selectedCateId\n                            })}\n                            onClick={async () => {\n                              if (this.state.cateInfo.selectedCateId === sub.id) return;\n\n                              const res = await fetchDictDetails({ cateId: sub.id }, { pageSize: 10, pageIndex: 1 });\n\n                              if (res.code === 200) {\n                                this.setState({\n                                  dataSource: res.data.list,\n                                  total: res.data.pageData.total,\n                                  cateInfo: {\n                                    ...this.state.cateInfo,\n                                    selectedCateId: sub.id\n                                  },\n                                  currentCateId: sub.id\n                                });\n                              } else {\n                                message.error(res.msg);\n                              }\n                            }}\n                            key={sub.id}\n                          >\n                            <span>{sub.cateName}</span>\n                            <Space className=\"opt-icon\">\n                              <Tooltip title=\"新增字典\">\n                                <PlusOutlined\n                                  className=\"opt-icon-sub\"\n                                  onClick={(e: any) => {\n                                    e.stopPropagation();\n\n                                    this.setState(\n                                      {\n                                        dictInfo: {\n                                          ...this.state.dictInfo,\n                                          visible: true,\n                                          title: '新增字典',\n                                          status: 'add'\n                                        },\n                                        cateInfo: {\n                                          ...this.state.cateInfo,\n                                          selectedCateId: sub.id\n                                        },\n                                        currentCateId: sub.id\n                                      },\n                                      () => {\n                                        this.dictForm.current!.resetFields();\n                                      }\n                                    );\n                                  }}\n                                />\n                              </Tooltip>\n                              <Tooltip title=\"编辑字典分类\">\n                                <EditOutlined\n                                  className=\"opt-icon-sub\"\n                                  onClick={async (e: any) => {\n                                    e.stopPropagation();\n\n                                    const res = await fetchDictCate(sub.id);\n\n                                    if (res.code === 200) {\n                                      this.setState(\n                                        {\n                                          cateInfo: {\n                                            ...this.state.cateInfo,\n                                            visible: true,\n                                            title: '编辑分类',\n                                            defaultData: res.data,\n                                            selectedCateId: sub.id,\n                                            status: 'edit'\n                                          },\n                                          groupInfo: {\n                                            ...this.state.groupInfo,\n                                            selectedGroupId: item.id\n                                          }\n                                        },\n                                        () => {\n                                          this.dictCateForm.current!.resetFields();\n                                        }\n                                      );\n                                    }\n                                  }}\n                                />\n                              </Tooltip>\n                              <Tooltip title=\"删除字典分类\">\n                                <DeleteOutlined\n                                  className=\"opt-icon-sub\"\n                                  onClick={(e: any) => {\n                                    e.stopPropagation();\n\n                                    Modal.confirm({\n                                      icon: <ExclamationCircleOutlined />,\n                                      content: '删除此分类，会删除分类下的字典，确定删除？',\n                                      okText: '确认',\n                                      cancelText: '取消',\n                                      onOk: async () => {\n                                        const res = await destroyDictCate(sub.id);\n\n                                        if (res.code === 200) {\n                                          message.success(res.msg);\n                                          this.getAllDict();\n\n                                          if (sub.id === this.state.cateInfo.selectedCateId) {\n                                            this.setState({\n                                              dataSource: []\n                                            });\n                                          }\n                                        } else {\n                                          message.error(res.msg);\n                                        }\n                                      }\n                                    });\n                                  }}\n                                />\n                              </Tooltip>\n                            </Space>\n                          </div>\n                        );\n                      })}\n                    </Collapse.Panel>\n                  );\n                })}\n              </Collapse>\n            </div>\n          </div>\n          <div className=\"center\"></div>\n          <div className=\"right\">\n            <div style={{ padding: '10px' }}>\n              <Row>\n                <Col span={6}>\n                  <Input placeholder=\"请输入\" suffix={<SearchOutlined />} />\n                </Col>\n                <Col span={18} style={{ textAlign: 'right' }}>\n                  <Space>\n                    <Button\n                      type=\"primary\"\n                      disabled={this.state.cateInfo.selectedCateId === ''}\n                      onClick={() => {\n                        this.setState(\n                          {\n                            dictInfo: {\n                              ...this.state.dictInfo,\n                              visible: true,\n                              title: '新增字典',\n                              status: 'add'\n                            },\n                            currentCateId: this.state.cateInfo.selectedCateId\n                          },\n                          () => {\n                            this.dictForm.current!.resetFields();\n                          }\n                        );\n                      }}\n                    >\n                      新增字典\n                    </Button>\n                    {selectedRowKeys.length > 0 && (\n                      <Button\n                        type=\"primary\"\n                        danger\n                        onClick={async () => {\n                          Modal.confirm({\n                            icon: <ExclamationCircleOutlined />,\n                            content: '确定删除？',\n                            okText: '确认',\n                            cancelText: '取消',\n                            onOk: async () => {\n                              const res = await destroiesDictDetails({\n                                ids: selectedRowKeys\n                              });\n\n                              if (res.code === 200) {\n                                message.success(res.msg);\n\n                                if (this.state.currentCateId === this.state.cateInfo.selectedCateId) {\n                                  const list = await fetchDictDetails(\n                                    {\n                                      cateId: this.state.currentCateId\n                                    },\n                                    { pageSize: 10, pageIndex: 1 }\n                                  );\n\n                                  if (list.code === 200) {\n                                    this.setState({\n                                      dataSource: list.data.list,\n                                      total: list.data.pageData.total\n                                    });\n                                  } else {\n                                    message.error(list.msg);\n                                  }\n                                }\n                              } else {\n                                message.error(res.msg);\n                              }\n                            }\n                          });\n                        }}\n                      >\n                        删除\n                      </Button>\n                    )}\n                  </Space>\n                </Col>\n              </Row>\n            </div>\n            <div>\n              <Table\n                dataSource={this.state.dataSource}\n                rowSelection={rowSelection}\n                rowKey=\"id\"\n                size=\"small\"\n                pagination={{\n                  position: ['bottomRight'],\n                  total: this.state.total,\n                  defaultCurrent: 1,\n                  defaultPageSize: 10,\n                  showSizeChanger: true,\n                  showQuickJumper: true,\n                  pageSizeOptions: ['10', '30', '50', '100'],\n                  size: 'default',\n                  showTotal: (total) => {\n                    return `共 ${total} 条`;\n                  },\n                  onChange: async (page, pageSize) => {\n                    const res = await fetchDictDetails(\n                      { cateId: this.state.cateInfo.selectedCateId },\n                      { pageSize: pageSize, pageIndex: page }\n                    );\n\n                    if (res.code === 200) {\n                      this.setState({\n                        dataSource: res.data.list,\n                        total: res.data.pageData.total\n                      });\n                    } else {\n                      message.error(res.msg);\n                    }\n                  }\n                }}\n                columns={columns}\n              />\n            </div>\n          </div>\n        </div>\n\n        <Modal\n          title={this.state.groupInfo.title}\n          visible={this.state.groupInfo.visible}\n          cancelText=\"取消\"\n          okText=\"确定\"\n          width={800}\n          onOk={() => {\n            this.dictGroupForm.current!.submit();\n          }}\n          onCancel={() => {\n            this.setState({ groupInfo: { ...this.state.groupInfo, visible: false, defaultData: null } });\n          }}\n        >\n          <Form\n            name=\"group\"\n            ref={this.dictGroupForm}\n            labelCol={{ span: 8 }}\n            wrapperCol={{ span: 16 }}\n            initialValues={this.state.groupInfo.defaultData || { sort: 1, enable: true }}\n            onFinish={async (values) => {\n              let res: any = null;\n\n              if (this.state.groupInfo.status === 'add') {\n                res = await createDictGroup(values);\n              } else {\n                res = await updateDictGroup({\n                  ...values,\n                  id: this.state.groupInfo.selectedGroupId\n                });\n              }\n\n              this.getAllDict();\n\n              if (!res || res?.code === 200) {\n                message.success(res.msg || '操作成功!');\n                this.setState({\n                  groupInfo: {\n                    ...this.state.groupInfo,\n                    visible: false,\n                    defaultData: null\n                  }\n                });\n              } else {\n                message.error(res.msg);\n              }\n            }}\n            onFinishFailed={(values) => {\n              // console.log('错误', values);\n            }}\n            autoComplete=\"off\"\n          >\n            <Row>\n              <Col span={12}>\n                <Form.Item\n                  label=\"分组名称\"\n                  name=\"groupName\"\n                  validateTrigger={['onBlur', 'onChange']}\n                  rules={[\n                    {\n                      required: true,\n                      message: '请输入分组名称!'\n                    }\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"分组英文名称\" name=\"groupEnName\">\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={12}>\n                <Form.Item\n                  label=\"分组编码\"\n                  name=\"groupCode\"\n                  validateTrigger={['onBlur', 'onChange']}\n                  rules={[{ required: true, message: '请输入分组编码!' }]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"序号\" name=\"sort\">\n                  <InputNumber min={0} max={10} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={12}>\n                <Form.Item label=\"是否启用\" valuePropName=\"checked\" name=\"enable\">\n                  <Switch />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"备注\" name=\"remark\">\n                  <Input.TextArea />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n\n        <Modal\n          title={this.state.cateInfo.title}\n          visible={this.state.cateInfo.visible}\n          cancelText=\"取消\"\n          okText=\"确定\"\n          width={800}\n          onOk={() => {\n            this.dictCateForm.current!.submit();\n          }}\n          onCancel={() => {\n            this.setState({ cateInfo: { ...this.state.cateInfo, visible: false, defaultData: null } });\n          }}\n        >\n          <Form\n            name=\"cate\"\n            ref={this.dictCateForm}\n            labelCol={{ span: 8 }}\n            wrapperCol={{ span: 16 }}\n            initialValues={this.state.cateInfo.defaultData || { sort: 1, enable: true }}\n            onFinish={async (values) => {\n              let res: any = null;\n\n              if (this.state.cateInfo.status === 'add') {\n                res = await createDictCate({\n                  ...values,\n                  groupId: this.state.groupInfo.selectedGroupId\n                });\n              } else {\n                res = await updateDictCate({\n                  ...values,\n                  groupId: this.state.groupInfo.selectedGroupId,\n                  id: this.state.cateInfo.selectedCateId\n                });\n              }\n\n              this.getAllDict();\n\n              if (!res || res?.code === 200) {\n                message.success(res.msg || '操作成功!');\n                this.setState({\n                  cateInfo: {\n                    ...this.state.cateInfo,\n                    visible: false,\n                    defaultData: null\n                  }\n                });\n              } else {\n                message.error(res.msg);\n              }\n            }}\n            onFinishFailed={(values) => {\n              // console.log('错误', values);\n            }}\n            autoComplete=\"off\"\n          >\n            <Row>\n              <Col span={12}>\n                <Form.Item\n                  label=\"分类名称\"\n                  name=\"cateName\"\n                  validateTrigger={['onBlur', 'onChange']}\n                  rules={[{ required: true, message: '请输入分类名称!' }]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"分类英文名称\" name=\"cateEnName\">\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={12}>\n                <Form.Item\n                  label=\"分类编码\"\n                  name=\"cateCode\"\n                  validateTrigger={['onBlur', 'onChange']}\n                  rules={[{ required: true, message: '请输入分类编码!' }]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"序号\" name=\"sort\">\n                  <InputNumber min={0} max={10} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={12}>\n                <Form.Item label=\"是否启用\" valuePropName=\"checked\" name=\"enable\">\n                  <Switch />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"备注\" name=\"remark\">\n                  <Input.TextArea />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n\n        <Modal\n          title={this.state.dictInfo.title}\n          visible={this.state.dictInfo.visible}\n          cancelText=\"取消\"\n          okText=\"确定\"\n          width={800}\n          onOk={() => {\n            this.dictForm.current!.submit();\n          }}\n          onCancel={() => {\n            this.setState({ dictInfo: { ...this.state.dictInfo, visible: false, defaultData: null } });\n          }}\n        >\n          <Form\n            name=\"dict\"\n            ref={this.dictForm}\n            labelCol={{ span: 8 }}\n            wrapperCol={{ span: 16 }}\n            initialValues={this.state.dictInfo.defaultData || { sort: 1, enable: true }}\n            onFinish={async (values) => {\n              let res: any = null;\n\n              if (this.state.dictInfo.status === 'add') {\n                res = await createDictDetail({\n                  ...values,\n                  cateId: this.state.currentCateId\n                });\n              } else {\n                res = await updateDictDetail({\n                  ...values,\n                  cateId: this.state.currentCateId,\n                  id: this.state.dictInfo.selectedDictId\n                });\n              }\n\n              if (!res || res?.code === 200) {\n                message.success(res.msg || '操作成功!');\n                this.setState({\n                  dictInfo: {\n                    ...this.state.cateInfo,\n                    visible: false,\n                    defaultData: null\n                  }\n                });\n\n                if (this.state.currentCateId === this.state.cateInfo.selectedCateId) {\n                  const list = await fetchDictDetails(\n                    { cateId: this.state.currentCateId },\n                    { pageSize: 10, pageIndex: 1 }\n                  );\n\n                  if (list.code === 200) {\n                    this.setState({\n                      dataSource: list.data.list,\n                      total: list.data.pageData.total\n                    });\n                  } else {\n                    message.error(list.msg);\n                  }\n                }\n              } else {\n                message.error(res.msg || res.error);\n              }\n            }}\n            onFinishFailed={(values) => {\n              // console.log('错误', values);\n            }}\n            autoComplete=\"off\"\n          >\n            <Row>\n              <Col span={12}>\n                <Form.Item\n                  label=\"字典名称\"\n                  name=\"dictName\"\n                  validateTrigger={['onBlur', 'onChange']}\n                  rules={[{ required: true, message: '请输入字典名称!' }]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"字典英文名称\" name=\"dictEnName\">\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={12}>\n                <Form.Item\n                  label=\"字典值\"\n                  name=\"dictValue\"\n                  validateTrigger={['onBlur', 'onChange']}\n                  rules={[{ required: true, message: '请输入分类编码!' }]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"序号\" name=\"sort\">\n                  <InputNumber min={0} max={10} style={{ width: '100%' }} />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={12}>\n                <Form.Item label=\"是否启用\" valuePropName=\"checked\" name=\"enable\">\n                  <Switch />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"备注\" name=\"remark\">\n                  <Input.TextArea />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default UserList;\n","import React from 'react';\nimport io from 'socket.io-client';\n\nclass UserManage extends React.Component {\n  componentDidMount() {\n    const socket = io('http://localhost:7001', {\n      query: {\n        room: 'demo',\n        userId: `client_123`\n      },\n      reconnectionAttempts: 5,\n      transports: ['websocket']\n    });\n\n    socket.on('connect', () => {\n      const id = socket.id;\n\n      console.log('通道编号', id);\n\n      // 监听自身 id 以实现 p2p 通讯\n      socket.on(id, (msg: any) => {\n        console.log('接受消息', msg);\n      });\n\n      // 接收在线用户信息\n      socket.on('online', (msg: any) => {\n        console.log('在线用户信息', msg);\n      });\n\n      // 反馈信息\n      socket.on('res', (msg: any) => {\n        console.log('反馈信息', msg);\n      });\n\n      // 系统事件\n      socket.on('disconnect', (msg: any) => {\n        console.log('失去连接消息', msg);\n      });\n\n      // 系统事件\n      socket.on('disconnecting', () => {\n        console.log('断开中...');\n      });\n\n      // 系统事件\n      socket.on('error', () => {\n        console.log('链接错误');\n      });\n\n      window.socket = socket;\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"user-manage-wrapper\">\n        <span>用户管理</span>\n      </div>\n    );\n  }\n}\n\nexport default UserManage;\n","import React from 'react';\n\ntype PropsType = {\n  visible: boolean;\n  title: string;\n  list?: Record<string, any>[];\n  cb?: () => void;\n};\n\nclass Test1 extends React.PureComponent<PropsType> {\n  render() {\n    console.log('组件开始更新');\n    return (\n      <div className=\"test\">\n        <ul>\n          {this.props.list?.map((item) => {\n            return <li key={item.id}>{item.name}</li>;\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Test1;\n","import React, { SyntheticEvent } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Test1 from '@/components/container/Test1';\nimport { Button } from 'antd';\n\ntype StateProps = {\n  list: Record<string, any>[];\n  count: number;\n};\n\nclass SchedulingManage extends React.Component<RouteComponentProps, StateProps> {\n  state = {\n    list: [\n      { id: '12312', name: '张三', age: 123 },\n      { id: '55644', name: '李四', age: 98 },\n      { id: '233444', name: '王五', age: 77 }\n    ],\n    count: 0\n  };\n\n  componentDidMount() {\n    // console.log('路由参数', this.props);\n  }\n\n  lebron = () => {};\n\n  render() {\n    return (\n      <div className=\"scheduling-manage-wrapper\">\n        <span>排班管理</span>\n        <p>数量: {this.state.count}</p>\n        <Button\n          onClick={(e: SyntheticEvent) => {\n            this.setState((state) => ({ count: state.count + 1 }));\n          }}\n        >\n          改变\n        </Button>\n        <Test1 visible={true} title=\"默认标题\" list={this.state.list} cb={this.lebron} />\n      </div>\n    );\n  }\n}\n\nexport default SchedulingManage;\n","/**\n * 判断是否为对象\n * @param value 需要验证的值\n */\nexport function isObject(value: any) {\n  return Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * 对象深度合并，不支持数组，遇到数组替换\n * @param args[0] 目标源对象\n * @returns object 返回新对象\n */\nexport function merge(...args: Array<Record<string, any>>): Record<string, any> {\n  const target: any = args[0];\n  for (let i = 1; i < args.length; i++) {\n    const source: any = args[i] || {};\n    for (const key in source) {\n      if (source.hasOwnProperty(key)) {\n        const value = source[key];\n        if (isObject(value) && isObject(target[key])) {\n          target[key] = merge(target[key], value);\n        } else {\n          target[key] = value;\n        }\n      }\n    }\n  }\n\n  return target;\n}\n","import xhr from './xhr';\nimport { getToken } from '@utils/jsonWebToken';\nimport { merge } from '@/utils/merge';\n\nlet common: any = null;\n\n/**\n * 处理通用数据\n */\nconst getCommData = async () => {\n  const jwt = getToken();\n  const commHead = {\n    Authorization: `${jwt.token_type} ${jwt.access_token}`,\n    'Accept-Language': 'zh-CN'\n  };\n\n  const baseConfig = {\n    clientId: 'gGywGzvMLSjsdFjGEpIs',\n    sign: 'gywAfgSrjsdFjGKHaHNYd',\n    timestamp: Math.round((new Date() as any) / 1000)\n  };\n\n  return { commHead, baseConfig };\n};\n\n/**\n * 默认输出请求\n */\nexport default async (options: any): Promise<CommonAjaxReturnDataModel> => {\n  common = await getCommData();\n  options = merge({ method: 'post' }, options, {\n    headers: common.commHead\n  });\n\n  if (options.method !== 'get') {\n    options.data = { data: options.data, ...common.baseConfig };\n  } else {\n    options.params = { ...options.params, ...common.baseConfig };\n  }\n\n  return xhr(options);\n};\n","import xhr from '@/request';\n\n/**\n * 获取用户列表\n */\nexport const getUserList = (params: any) =>\n  xhr({\n    url: '/api/org/user/list',\n    params,\n    method: 'get'\n  });\n\n/**\n * 删除用户\n */\nexport const deleteUserRecord = (data: any) =>\n  xhr({\n    url: '/api/org/user/record',\n    data,\n    method: 'delete'\n  });\n\n/**\n * 更新用户信息\n */\nexport const updateUserDetail = (data: any) =>\n  xhr({\n    url: '/api/org/user/detail',\n    data,\n    method: 'put'\n  });\n\n/**\n * 创建用户信息\n */\nexport const createUserForm = (data: any) =>\n  xhr({\n    url: '/api/org/user/form',\n    data\n  });\n\nexport const getUserInfo = (data: any) =>\n  xhr({\n    url: '/api/post/list',\n    data\n  });\n\n/******************** 新增部分 ***********************/\n\n/**\n * 获取字典分组，字典类别，字典明细所有数据\n */\nexport const fetchDict = () =>\n  xhr({\n    url: '/api/v1/dict/all',\n    method: 'get'\n  });\n\n/**\n * 获取字典详情列表分页数据\n * @param data 字典分类数据\n * @param params 分页数据\n * @returns 字典详情列表\n */\nexport const fetchDictDetails = (data: any, params: any) =>\n  xhr({\n    url: `/api/v1/dict/detail/${data.cateId}`,\n    method: 'get',\n    params\n  });\n\n/**\n * 创建字典明细\n * @param data 字典明细数据\n */\nexport const createDictDetail = (data: any) =>\n  xhr({\n    url: '/api/v1/dict-detail',\n    data\n  });\n\n/**\n * 更新字典明细数据\n * @param id 字典明细编号\n * @param data 待更新的数据\n */\nexport const updateDictDetail = (data: any) =>\n  xhr({\n    url: `/api/v1/dict-detail/${data.id}`,\n    method: 'put',\n    data\n  });\n\n/**\n * 获取指定字典明细数据\n * @param id 字典明细编号\n */\nexport const fetchDictDetail = (id: string) =>\n  xhr({\n    url: `/api/v1/dict-detail/${id}`,\n    method: 'get'\n  });\n\n/**\n * 删除指定字典明细数据\n * @param id 字典明细编号\n */\nexport const destroyDictDetail = (id: string) =>\n  xhr({\n    url: `/api/v1/dict-detail/${id}`,\n    method: 'delete'\n  });\n\n/**\n * 获取指定字典分类数据\n * @param id 字典分类编号\n */\nexport const fetchDictCate = (id: string) =>\n  xhr({\n    url: `/api/v1/dict-cate/${id}`,\n    method: 'get'\n  });\n\n/**\n * 更新字典分类信息\n * @param data 字典分类数据\n */\nexport const updateDictCate = (data: any) =>\n  xhr({\n    url: `/api/v1/dict-cate/${data.id}`,\n    method: 'put',\n    data\n  });\n\n/**\n * 创建字典明细\n * @param data 字典明细数据\n */\nexport const createDictCate = (data: any) =>\n  xhr({\n    url: '/api/v1/dict-cate',\n    data\n  });\n\n/**\n * 删除指定字典分类条目\n * @param id 字典分类编号\n */\nexport const destroyDictCate = (id: string) =>\n  xhr({\n    url: `/api/v1/dict-cate/${id}`,\n    method: 'delete'\n  });\n\n/**\n * 获取字典分组信息\n * @param id 字典分组编号\n */\nexport const fetchDictGroup = (id: string) =>\n  xhr({\n    url: `/api/v1/dict-group/${id}`,\n    method: 'get'\n  });\n\n/**\n * 创建字典分组条目\n * @param data 分组信息\n */\nexport const createDictGroup = (data: any) =>\n  xhr({\n    url: '/api/v1/dict-group',\n    data\n  });\n\n/**\n * 创建字典分组条目\n * @param data 分组信息\n */\nexport const updateDictGroup = (data: any) =>\n  xhr({\n    url: `/api/v1/dict-group/${data.id}`,\n    data,\n    method: 'put'\n  });\n\n/**\n * 批量删除字典明细\n * @param data 字典明细编号集合\n */\nexport const destroiesDictDetails = (data: any) =>\n  xhr({\n    url: '/api/v1/dict-detail/batch',\n    data\n  });\n\n/**\n * 删除字典分组条目\n * @param id 字典分组编号\n */\nexport const destroyDictGroup = (id: string) =>\n  xhr({\n    url: `/api/v1/dict-group/${id}`,\n    method: 'delete'\n  });\n","export default __webpack_public_path__ + \"static/media/avatar.c8414c56.png\";","var map = {\n\t\"./Account/AccountCenter.tsx\": 219,\n\t\"./Account/AccountSetting.tsx\": 220,\n\t\"./Attendance/AttendanceList.tsx\": 221,\n\t\"./Attendance/AttendanceManage.tsx\": 222,\n\t\"./Attendance/AttendancePeriod.tsx\": 223,\n\t\"./Attendance/AttendanceRecord.tsx\": 224,\n\t\"./Dashboard/Analysis.tsx\": 225,\n\t\"./Dashboard/WorkStation.tsx\": 226,\n\t\"./FormPage/BaseForm.tsx\": 238,\n\t\"./FormPage/SeniorForm.tsx\": 239,\n\t\"./ListPage/CardList.tsx\": 240,\n\t\"./ListPage/QueryList.tsx\": 241,\n\t\"./ReportPage/OtherReport.tsx\": 242,\n\t\"./ReportPage/UserReport/UserAttendanceReport.tsx\": 243,\n\t\"./ReportPage/UserReport/UserInfoReport.tsx\": 244,\n\t\"./Scheduling/SchedulingList.tsx\": 245,\n\t\"./Scheduling/SchedulingManage.tsx\": 260,\n\t\"./Scheduling/SchedulingPublish.tsx\": 246,\n\t\"./UserCenter/UserList.tsx\": 247,\n\t\"./UserCenter/UserManage.tsx\": 252\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 510;","var map = {\n\t\"./business/Account/AccountCenter\": 219,\n\t\"./business/Account/AccountCenter.tsx\": 219,\n\t\"./business/Account/AccountSetting\": 220,\n\t\"./business/Account/AccountSetting.tsx\": 220,\n\t\"./business/Attendance/AttendanceList\": 221,\n\t\"./business/Attendance/AttendanceList.tsx\": 221,\n\t\"./business/Attendance/AttendanceManage\": 222,\n\t\"./business/Attendance/AttendanceManage.tsx\": 222,\n\t\"./business/Attendance/AttendancePeriod\": 223,\n\t\"./business/Attendance/AttendancePeriod.tsx\": 223,\n\t\"./business/Attendance/AttendanceRecord\": 224,\n\t\"./business/Attendance/AttendanceRecord.tsx\": 224,\n\t\"./business/Dashboard/Analysis\": 225,\n\t\"./business/Dashboard/Analysis.tsx\": 225,\n\t\"./business/Dashboard/WorkStation\": 226,\n\t\"./business/Dashboard/WorkStation.tsx\": 226,\n\t\"./business/FormPage/BaseForm\": 238,\n\t\"./business/FormPage/BaseForm.tsx\": 238,\n\t\"./business/FormPage/SeniorForm\": 239,\n\t\"./business/FormPage/SeniorForm.tsx\": 239,\n\t\"./business/ListPage/CardList\": 240,\n\t\"./business/ListPage/CardList.tsx\": 240,\n\t\"./business/ListPage/QueryList\": 241,\n\t\"./business/ListPage/QueryList.tsx\": 241,\n\t\"./business/ReportPage/OtherReport\": 242,\n\t\"./business/ReportPage/OtherReport.tsx\": 242,\n\t\"./business/ReportPage/UserReport/UserAttendanceReport\": 243,\n\t\"./business/ReportPage/UserReport/UserAttendanceReport.tsx\": 243,\n\t\"./business/ReportPage/UserReport/UserInfoReport\": 244,\n\t\"./business/ReportPage/UserReport/UserInfoReport.tsx\": 244,\n\t\"./business/Scheduling/SchedulingList\": 245,\n\t\"./business/Scheduling/SchedulingList.tsx\": 245,\n\t\"./business/Scheduling/SchedulingManage\": 260,\n\t\"./business/Scheduling/SchedulingManage.tsx\": 260,\n\t\"./business/Scheduling/SchedulingPublish\": 246,\n\t\"./business/Scheduling/SchedulingPublish.tsx\": 246,\n\t\"./business/UserCenter/UserList\": 247,\n\t\"./business/UserCenter/UserList.tsx\": 247,\n\t\"./business/UserCenter/UserManage\": 252,\n\t\"./business/UserCenter/UserManage.tsx\": 252\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 679;\nmodule.exports = webpackAsyncContext;","const config = {\n  id: 0,\n  name: '根节点',\n  code: '',\n  nodeType: '',\n  path: '',\n  meta: { title: '根节点', auth: false, icon: '', keepAlive: false },\n  childrens: [\n    {\n      id: 13,\n      name: 'Dashboard',\n      code: 'Dashboard',\n      nodeType: 'folder',\n      path: '',\n      meta: { title: 'Dashboard', auth: false, icon: 'saas-dashboard', keepAlive: false },\n      childrens: [\n        {\n          id: 9,\n          name: '分析页',\n          code: 'Analysis',\n          nodeType: 'page',\n          path: '/Dashboard/Analysis',\n          meta: { title: '分析页', auth: true, icon: '', keepAlive: true }\n        },\n        {\n          id: 10,\n          name: '工作台',\n          code: 'WorkStation',\n          nodeType: 'page',\n          path: '/Dashboard/WorkStation',\n          meta: { title: '工作台', auth: true, icon: '', keepAlive: true }\n        }\n      ]\n    },\n    {\n      id: 1,\n      name: '排班模块',\n      code: 'Scheduling',\n      nodeType: 'folder',\n      path: '',\n      meta: { title: '排班模块', auth: true, icon: 'saas-scheduling', keepAlive: false },\n      childrens: [\n        {\n          id: 2,\n          name: '排班列表',\n          code: 'SchedulingList',\n          nodeType: 'page',\n          path: '/Scheduling/SchedulingList',\n          meta: { title: '排班列表', auth: true, icon: '', keepAlive: false }\n        },\n        {\n          id: 3,\n          name: '排班管理',\n          code: 'SchedulingManage',\n          nodeType: 'page',\n          path: '/Scheduling/SchedulingManage',\n          meta: { title: '排班管理', auth: true, icon: '', keepAlive: true }\n        },\n        {\n          id: 4,\n          name: '排班发布',\n          code: 'SchedulingPublish',\n          nodeType: 'page',\n          path: '/Scheduling/SchedulingPublish',\n          meta: { title: '排班发布', auth: true, icon: '', keepAlive: false }\n        }\n      ]\n    },\n    {\n      id: 5,\n      name: '用户模块',\n      code: 'UserCenter',\n      nodeType: 'folder',\n      path: '',\n      meta: { title: '用户中心', auth: false, icon: 'saas-user', keepAlive: false },\n      childrens: [\n        {\n          id: 6,\n          name: '用户列表',\n          code: 'UserList',\n          nodeType: 'page',\n          path: '/UserCenter/UserList',\n          meta: { title: '用户列表', auth: true, icon: '', keepAlive: false }\n        },\n        {\n          id: 7,\n          name: '用户管理',\n          code: 'UserManage',\n          nodeType: 'page',\n          path: '/UserCenter/UserManage',\n          meta: { title: '用户管理', auth: true, icon: '', keepAlive: false }\n        }\n      ]\n    },\n    {\n      id: 8,\n      name: '考勤模块',\n      code: 'Attendance',\n      nodeType: 'folder',\n      path: '',\n      meta: { title: '考勤模块', auth: false, icon: 'saas-attendance', keepAlive: false },\n      childrens: [\n        {\n          id: 9,\n          name: '考勤列表',\n          code: 'AttendanceList',\n          nodeType: 'page',\n          path: '/Attendance/AttendanceList',\n          meta: { title: '考勤列表', auth: true, icon: '', keepAlive: false }\n        },\n        {\n          id: 10,\n          name: '考勤管理',\n          code: 'AttendanceManage',\n          nodeType: 'page',\n          path: '/Attendance/AttendanceManage',\n          meta: { title: '考勤管理', auth: true, icon: '', keepAlive: false }\n        },\n        {\n          id: 11,\n          name: '考勤期数',\n          code: 'AttendancePeriod',\n          nodeType: 'page',\n          path: '/Attendance/AttendancePeriod',\n          meta: { title: '考勤期数', auth: true, icon: '', keepAlive: false }\n        },\n        {\n          id: 12,\n          name: '考勤记录',\n          code: 'AttendanceRecord',\n          nodeType: 'page',\n          path: '/Attendance/AttendanceRecord',\n          meta: { title: '考勤记录', auth: true, icon: '', keepAlive: false }\n        }\n      ]\n    },\n    {\n      id: 13,\n      name: '报表页',\n      code: 'ReportPage',\n      nodeType: 'folder',\n      path: '',\n      meta: { title: '报表页', auth: false, icon: 'saas-report', keepAlive: false },\n      childrens: [\n        {\n          id: 9,\n          name: '人员报表',\n          code: 'UserReport',\n          nodeType: 'folder',\n          path: '',\n          meta: { title: '人员报表', auth: true, icon: '', keepAlive: false },\n          childrens: [\n            {\n              id: 10,\n              name: '人员信息报表',\n              code: 'UserInfoReport',\n              nodeType: 'page',\n              path: '/ReportPage/UserReport/UserInfoReport',\n              meta: { title: '人员信息报表', auth: true, icon: '', keepAlive: false }\n            },\n            {\n              id: 10,\n              name: '人员出勤报表',\n              code: 'UserAttendanceReport',\n              nodeType: 'page',\n              path: '/ReportPage/UserReport/UserAttendanceReport',\n              meta: { title: '人员出勤报表', auth: true, icon: '', keepAlive: false }\n            }\n          ]\n        },\n        {\n          id: 10,\n          name: '其他报表',\n          code: 'OtherReport',\n          nodeType: 'page',\n          path: '/ReportPage/OtherReport',\n          meta: { title: '其他报表', auth: true, icon: '', keepAlive: false }\n        }\n      ]\n    },\n    {\n      id: 13,\n      name: '个人页',\n      code: 'Account',\n      nodeType: 'folder',\n      path: '',\n      meta: { title: '个人页', auth: false, icon: 'saas-user', keepAlive: false },\n      childrens: [\n        {\n          id: 9,\n          name: '个人中心',\n          code: 'AccountCenter',\n          nodeType: 'page',\n          path: '/Account/AccountCenter',\n          meta: { title: '个人中心', auth: true, icon: '', keepAlive: false }\n        },\n        {\n          id: 10,\n          name: '个人设置',\n          code: 'AccountSetting',\n          nodeType: 'page',\n          path: '/Account/AccountSetting',\n          meta: { title: '个人设置', auth: true, icon: '', keepAlive: false }\n        }\n      ]\n    },\n    {\n      id: 13,\n      name: '表单页',\n      code: 'FormPage',\n      nodeType: 'folder',\n      path: '',\n      meta: { title: '表单页', auth: false, icon: 'saas-form', keepAlive: false },\n      childrens: [\n        {\n          id: 9,\n          name: '基础表单',\n          code: 'BaseForm',\n          nodeType: 'page',\n          path: '/FormPage/BaseForm',\n          meta: { title: '基础表单', auth: true, icon: '', keepAlive: false }\n        },\n        {\n          id: 10,\n          name: '高级表单',\n          code: 'SeniorForm',\n          nodeType: 'page',\n          path: '/FormPage/SeniorForm',\n          meta: { title: '高级表单', auth: true, icon: '', keepAlive: false }\n        }\n      ]\n    },\n    {\n      id: 13,\n      name: '列表页',\n      code: 'ListPage',\n      nodeType: 'folder',\n      path: '',\n      meta: { title: '列表页', auth: false, icon: 'saas-list', keepAlive: false },\n      childrens: [\n        {\n          id: 9,\n          name: '查询列表',\n          code: 'QueryList',\n          nodeType: 'page',\n          path: '/ListPage/QueryList',\n          meta: { title: '查询列表', auth: true, icon: '', keepAlive: false }\n        },\n        {\n          id: 10,\n          name: '卡片列表',\n          code: 'CardList',\n          nodeType: 'page',\n          path: '/ListPage/CardList',\n          meta: { title: '卡片列表', auth: true, icon: '', keepAlive: false }\n        }\n      ]\n    }\n  ]\n};\n\nexport default config;\n","import { createFromIconfontCN } from '@ant-design/icons';\nimport config from '@/config/default.config';\n\nconst IconFont = createFromIconfontCN({\n  scriptUrl: config.iconfontUrl\n});\n\nexport default IconFont;\n","import React from 'react';\nimport { Layout, Menu, Dropdown, Avatar, Modal, Tooltip, message } from 'antd';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport RouterConfig from '@/routers/RouterConfig';\nimport config from '@/config/default.config';\nimport classnames from 'classnames';\nimport IconFont from '@/assets/iconfont/IconFont';\nimport { refreshByCacheKey } from 'react-router-cache-route';\nimport store from '@/store';\nimport { local } from '@/utils/storage';\nimport {\n  UserOutlined,\n  SettingOutlined,\n  LogoutOutlined,\n  BellOutlined,\n  MoreOutlined,\n  QuestionCircleOutlined,\n  SearchOutlined,\n  ReloadOutlined\n} from '@ant-design/icons';\nimport { Unsubscribe } from 'redux';\n\ninterface RouteComponentPropsExtra extends RouteComponentProps {\n  /**\n   * 是否折叠\n   */\n  collapsed: boolean;\n}\n\nconst logo = require('@assets/images/logo.svg').default;\nconst avatar = require('@assets/images/avatar.png').default;\nconst username = local.get('LOGININFO')?.account.username;\n\nclass Header extends React.Component<RouteComponentPropsExtra> {\n  state = {\n    selectedLang: ['chinese'],\n    account: store.getState().user.account\n  };\n\n  unsubscribe!: Unsubscribe;\n\n  componentDidMount() {\n    this.unsubscribe = store.subscribe(() => {\n      this.setState({\n        account: store.getState().user.account\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  // 刷新路由页面\n  refreshRouter = () => {\n    refreshByCacheKey(store.getState().app.curCacheRoute);\n    message.success('刷新成功');\n  };\n\n  render() {\n    const menu = (\n      <Menu\n        selectedKeys={this.state.selectedLang}\n        style={{ minWidth: 160 }}\n        onClick={(data) => {\n          this.setState(\n            {\n              selectedLang: [data.key]\n            },\n            () => {\n              message.success('切换成功');\n            }\n          );\n        }}\n      >\n        <Menu.Item key=\"english\">\n          <span>English</span>\n        </Menu.Item>\n        <Menu.Item key=\"chinese\">\n          <span>简体中文</span>\n        </Menu.Item>\n      </Menu>\n    );\n\n    const userInfo = (\n      <Menu\n        onClick={(data) => {\n          data.key === 'loginout' &&\n            Modal.confirm({\n              cancelText: '取消',\n              centered: true,\n              closable: true,\n              content: <div>确定退出？</div>,\n              okText: '确认',\n              onCancel: () => {},\n              onOk: () => {\n                local.clear(); // 清除所有localStorage\n                this.props.history.push('/user/login');\n              }\n            });\n        }}\n        style={{ minWidth: 160 }}\n      >\n        <Menu.Item icon={<UserOutlined />} key=\"usercenter\">\n          <span>个人中心</span>\n        </Menu.Item>\n        <Menu.Item icon={<SettingOutlined />} key=\"userset\">\n          <span>个人设置</span>\n        </Menu.Item>\n        <Menu.Divider></Menu.Divider>\n        <Menu.Item icon={<LogoutOutlined />} key=\"loginout\">\n          <span>退出登录</span>\n        </Menu.Item>\n      </Menu>\n    );\n\n    return (\n      <Layout.Header className=\"framework-header\">\n        <div className={classnames('framework-header-layout', { light: config.theme.topbarTheme === 'light' })}>\n          {config.theme.navMode === 'top' && (\n            <div className=\"framework-header-layout-left\">\n              <div className=\"framework-header-layout-left-logo\">\n                <a>\n                  <img src={logo} alt=\"logo\" />\n                  <h1>Admin Pro</h1>\n                </a>\n              </div>\n            </div>\n          )}\n\n          {/* 顶部菜单导航 */}\n          <div className=\"framework-header-layout-menu\" style={{ flex: '1 1 0%' }}>\n            {config.theme.navMode === 'top' && (\n              <Menu\n                mode=\"horizontal\"\n                theme={config.theme.topbarTheme}\n                defaultSelectedKeys={[config.homePage]}\n                onClick={(data: any) => {\n                  this.props.history.push(data.key);\n                }}\n              >\n                {RouterConfig.childrens.map((item) => {\n                  return item.nodeType === 'page' ? (\n                    <Menu.Item key={item.path}>{item.meta.title}</Menu.Item>\n                  ) : (\n                    <Menu.SubMenu\n                      key={item.code}\n                      title={item.meta.title}\n                      icon={item.meta.icon !== '' && <IconFont type={item.meta.icon} />}\n                    >\n                      {item.childrens &&\n                        item.childrens.length > 0 &&\n                        item.childrens.map((sub) => {\n                          return sub.nodeType === 'page' ? (\n                            <Menu.Item key={sub.path}>{sub.meta.title}</Menu.Item>\n                          ) : (\n                            <Menu.SubMenu\n                              key={sub.code}\n                              title={sub.meta.title}\n                              icon={sub.meta.icon !== '' && <IconFont type={sub.meta.icon} />}\n                            >\n                              {sub.childrens &&\n                                sub.childrens.length > 0 &&\n                                sub.childrens.map((son) => {\n                                  return <Menu.Item key={son.path}>{son.meta.title}</Menu.Item>;\n                                })}\n                            </Menu.SubMenu>\n                          );\n                        })}\n                    </Menu.SubMenu>\n                  );\n                })}\n              </Menu>\n            )}\n          </div>\n\n          {/* 右侧操作栏 */}\n          <div\n            className={classnames('framework-header-layout-right', {\n              light: config.theme.topbarTheme === 'light'\n            })}\n          >\n            <Tooltip title=\"刷新\">\n              <span className=\"header-btn-action\" onClick={this.refreshRouter}>\n                <ReloadOutlined />\n              </span>\n            </Tooltip>\n            <Tooltip title=\"检索信息\">\n              <SearchOutlined className=\"header-btn-action\" />\n            </Tooltip>\n            <Tooltip title=\"使用文档\">\n              <QuestionCircleOutlined className=\"header-btn-action\" />\n            </Tooltip>\n            <Tooltip title=\"通知\">\n              <BellOutlined className=\"header-btn-action\" />\n            </Tooltip>\n            <Dropdown overlay={userInfo} placement=\"bottomRight\">\n              <span className=\"header-btn-action\">\n                <Avatar size=\"small\" src={avatar} />\n                <span style={{ fontSize: 14, marginLeft: 5 }}>{username}</span>\n              </span>\n            </Dropdown>\n            <Dropdown overlay={menu} placement=\"bottomRight\">\n              <IconFont type=\"saas-language\" className=\"header-btn-action\" />\n            </Dropdown>\n            <Tooltip title=\"设置\">\n              <MoreOutlined className=\"header-btn-action\" />\n            </Tooltip>\n          </div>\n        </div>\n      </Layout.Header>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","import { ComponentClass, FC } from 'react';\nimport loadable from '@loadable/component';\n\ntype RouterObjInfo = {\n  /**\n   * 路由组件相对路径\n   */\n  path: string;\n  /**\n   * 路由组件文件名称\n   */\n  name: string;\n  /**\n   * 路由组件对象\n   */\n  component: ComponentClass<any> | FC<any>;\n};\n\nconst list: Array<RouterObjInfo> = [];\nconst files = require.context('@/pages/business', true, /\\.tsx$/);\n\nfiles.keys().forEach((item) => {\n  const fileName = item.split('/').reverse()[0].split('.')[0];\n\n  list.push({\n    path: item.substring(1).split('.')[0],\n    name: fileName,\n    component: loadable(() => import(`@/pages/business${item.substring(1)}`))\n  });\n});\n\nexport default list;\n","const datas: Array<RouteObject> = [];\n\nconst recursion = (data: Array<RouteObject>) => {\n  data.forEach((item) => {\n    if (item.nodeType === 'page') {\n      datas.push(item);\n    }\n\n    if (item.childrens && item.childrens.length > 0) {\n      recursion(item.childrens);\n    }\n  });\n};\n\n/**\n * 路由数据转换函数\n * @param data 路由树形对象\n * @returns 路由数据 一维数组\n */\nconst routerTransform = (data: Record<string, any>): Array<RouteObject> => {\n  if (datas.length > 0) return datas;\n  recursion(data.childrens);\n  return datas;\n};\n\nexport default routerTransform;\n","import React from 'react';\nimport { Route, Redirect, RouteComponentProps, withRouter } from 'react-router-dom';\nimport loadable from '@loadable/component';\nimport config from '@/config/default.config';\nimport AutoImport from '@/routers/AutoImport';\nimport CacheRoute, { CacheRouteProps } from 'react-router-cache-route';\nimport { local } from '@/utils/storage';\nimport store from '@/store';\nimport { setCurCacheRoute } from '@/store/actions';\nimport RouterTransform from '@/routers/RouterTransform';\nimport RouterConfig from '@/routers/RouterConfig';\n\n// 树形菜单路由被拉平后的数据，正式环境下需来自服务端\nconst routers: RouteObject[] = RouterTransform(RouterConfig);\n\ntype StateType = {\n  current: RouteObject | null;\n};\n\nconst NotFound = loadable(() => import('@/pages/exceptions/404'));\n\nclass FrontendAuth extends React.Component<RouteComponentProps, StateType> {\n  constructor(props: RouteComponentProps) {\n    super(props);\n\n    this.state = {\n      current: null\n    };\n  }\n\n  static getDerivedStateFromProps(props: RouteComponentProps, state: StateType) {\n    if (props.location.pathname !== state.current?.path) {\n      return {\n        current: routers.find((item) => item.path === props.location.pathname)\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate() {\n    this.relationSideEffect();\n  }\n\n  componentDidMount() {\n    this.relationSideEffect();\n  }\n\n  relationSideEffect() {\n    document.title = this.state.current?.meta.title || '';\n    // 设置当前缓存路由key方便后期刷新\n    store.dispatch(setCurCacheRoute({ curCacheRoute: this.state.current?.path }));\n  }\n\n  render() {\n    const { current } = this.state;\n    const { pathname } = this.props.location;\n    const isLogin = local.get('access_token');\n\n    if (isLogin) {\n      if (pathname === '/user/login') {\n        return <Redirect to={config.homePage} />;\n      }\n    } else {\n      if (current && current.meta.auth) {\n        return <Redirect to=\"/user/login\" />;\n      }\n    }\n\n    if (pathname === '/') {\n      return <Redirect to={config.homePage} />;\n    }\n\n    if (!current) {\n      return <Route component={NotFound} />;\n    }\n\n    return (\n      <>\n        {routers.map((item) => {\n          const currentRouter = AutoImport.find((sub) => sub.name === item.code);\n\n          if (currentRouter) {\n            if (config.multiTab || item.meta.keepAlive) {\n              return (\n                <CacheRoute\n                  when=\"always\"\n                  cacheKey={item.path}\n                  key={item.path}\n                  className=\"cache-route\"\n                  exact\n                  path={item.path}\n                  saveScrollPosition\n                  render={(props: CacheRouteProps) => <currentRouter.component {...{ ...props, meta: item.meta }} />}\n                />\n              );\n            }\n\n            return (\n              <Route\n                key={item.path}\n                exact\n                path={item.path}\n                render={(props: RouteComponentProps) => <currentRouter.component {...{ ...props, meta: item.meta }} />}\n              />\n            );\n          }\n\n          return null;\n        })}\n      </>\n    );\n  }\n}\n\nexport default withRouter(FrontendAuth);\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport FrontendAuth from '@/routers/FrontendAuth';\nimport { CacheSwitch } from 'react-router-cache-route';\n\nclass Content extends React.Component<RouteComponentProps> {\n  render() {\n    return (\n      <Layout.Content className=\"framework-content\">\n        <div className=\"framework-content-layout\">\n          <CacheSwitch>\n            <FrontendAuth />\n          </CacheSwitch>\n        </div>\n      </Layout.Content>\n    );\n  }\n}\n\nexport default withRouter(Content);\n","import React from 'react';\nimport Scroll from 'react-custom-scrollbars';\nimport Measure from 'react-measure';\nimport classnames from 'classnames';\n\ntype PropsType = {\n  /**\n   * 监听的div元素类名\n   */\n  className: string;\n  /**\n   * 纵轴滑块是否高亮\n   */\n  thumbVerticalLight?: boolean;\n  /**\n   * 纵轴轨道是否高亮\n   */\n  trackVerticalLight?: boolean;\n  /**\n   * 子元素\n   */\n  children: any;\n};\n\nclass Scrollbars extends React.Component<PropsType> {\n  static defaultProps = {\n    thumbVerticalLight: true,\n    trackVerticalLight: true\n  };\n\n  state = {\n    routerScroll: React.createRef<Scroll>()\n  };\n\n  render() {\n    return (\n      <Scroll\n        ref={this.state.routerScroll}\n        renderThumbVertical={(props) => (\n          <div\n            {...props}\n            className={classnames('custom-scrollbar-vertical thumb', {\n              light: this.props.thumbVerticalLight\n            })}\n          />\n        )}\n        renderTrackVertical={(props) => (\n          <div\n            {...props}\n            className={classnames('custom-scrollbar-vertical track', {\n              light: this.props.trackVerticalLight\n            })}\n          />\n        )}\n        autoHide\n      >\n        <Measure\n          bounds\n          onResize={(contentRect) => {\n            this.state.routerScroll.current?.forceUpdate();\n          }}\n        >\n          {({ measureRef }) => (\n            <div ref={measureRef} className={this.props.className}>\n              {this.props.children}\n            </div>\n          )}\n        </Measure>\n      </Scroll>\n    );\n  }\n}\n\nexport default Scrollbars;\n","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport classnames from 'classnames';\nimport RouterConfig from '@/routers/RouterConfig';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport config from '@/config/default.config';\nimport IconFont from '@/assets/iconfont/IconFont';\nimport Scrollbars from '@/components/container/Scrollbars';\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from '@ant-design/icons';\n\ninterface RouteComponentPropsExtra extends RouteComponentProps {\n  /**\n   * 是否折叠\n   */\n  collapsed: boolean;\n  /**\n   * 折叠切换回调函数\n   */\n  onCollapsed: () => void;\n}\n\nclass Sider extends React.Component<RouteComponentPropsExtra> {\n  state = {\n    logo: require('@assets/images/logo.svg').default\n  };\n\n  render() {\n    const { collapsed, onCollapsed } = this.props;\n    return (\n      <Layout.Sider\n        breakpoint=\"lg\"\n        className=\"framework-sider framework-sider-fixed\"\n        trigger={null}\n        collapsible\n        collapsedWidth={48}\n        collapsed={collapsed}\n        onCollapse={(collapsed, type) => {\n          type === 'responsive' && onCollapsed();\n        }}\n      >\n        <div className={classnames('framework-sider-logo', { collapsed })}>\n          <a>\n            <img src={this.state.logo} alt=\"logo\" />\n            {!collapsed ? <h1>Admin Pro</h1> : null}\n          </a>\n        </div>\n        <div className=\"framework-sider-menu\">\n          <Scrollbars className=\"undefined\" thumbVerticalLight={false} trackVerticalLight={false}>\n            <Menu\n              mode=\"inline\"\n              theme=\"dark\"\n              defaultOpenKeys={(() => {\n                const arr = config.homePage.split('/');\n                return arr.slice(1, arr.length - 1);\n              })()}\n              defaultSelectedKeys={[config.homePage]}\n              inlineIndent={16}\n              onClick={(data: any) => {\n                this.props.history.push(data.key);\n              }}\n              style={{ borderRight: 0, width: '100%' }}\n            >\n              {RouterConfig.childrens.map((item) => {\n                return item.nodeType === 'page' ? (\n                  <Menu.Item key={item.path}>{item.meta.title}</Menu.Item>\n                ) : (\n                  <Menu.SubMenu\n                    key={item.code}\n                    title={item.meta.title}\n                    icon={item.meta.icon !== '' && <IconFont type={item.meta.icon} />}\n                  >\n                    {item.childrens &&\n                      item.childrens.length > 0 &&\n                      item.childrens.map((sub) => {\n                        return sub.nodeType === 'page' ? (\n                          <Menu.Item key={sub.path}>{sub.meta.title}</Menu.Item>\n                        ) : (\n                          <Menu.SubMenu\n                            key={sub.code}\n                            title={sub.meta.title}\n                            icon={sub.meta.icon !== '' && <IconFont type={sub.meta.icon} />}\n                          >\n                            {sub.childrens &&\n                              sub.childrens.length > 0 &&\n                              sub.childrens.map((son) => {\n                                return <Menu.Item key={son.path}>{son.meta.title}</Menu.Item>;\n                              })}\n                          </Menu.SubMenu>\n                        );\n                      })}\n                  </Menu.SubMenu>\n                );\n              })}\n            </Menu>\n          </Scrollbars>\n        </div>\n        <div className=\"framework-sider-links\">\n          <Menu\n            mode=\"inline\"\n            theme=\"dark\"\n            inlineIndent={16}\n            selectable={false}\n            onClick={() => {\n              onCollapsed();\n            }}\n            style={{ borderRight: 0, width: '100%' }}\n          >\n            <Menu.Item\n              key=\"link\"\n              className=\"collapsed-item-active\"\n              icon={React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                className: 'collapsed-button'\n              })}\n            ></Menu.Item>\n          </Menu>\n        </div>\n      </Layout.Sider>\n    );\n  }\n}\n\nexport default withRouter(Sider);\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport classnames from 'classnames';\nimport Header from './Header';\nimport Content from './Content';\nimport Sider from './Sider';\nimport config from '@/config/default.config';\nimport '@assets/less/framework/FrameworkBase.less';\n\nclass FrameworkBase extends React.Component<RouteComponentProps> {\n  state = {\n    collapsed: false\n  };\n\n  collapsedHandle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n\n  render() {\n    const { collapsed } = this.state;\n\n    return (\n      <div className=\"framework-base-wrapper\">\n        <Layout style={{ height: '100vh', minHeight: '100vh' }}>\n          {config.theme.navMode === 'side' && (\n            <>\n              <div className={classnames('framework-sider-placeholder', { collapsed })}></div>\n              <Sider collapsed={collapsed} onCollapsed={this.collapsedHandle} />\n            </>\n          )}\n          <Layout>\n            <Header collapsed={collapsed} />\n            <Content />\n          </Layout>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(FrameworkBase);\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport FrameworkBase from '@/layouts/FrameworkBase';\n\nclass Index extends React.Component<RouteComponentProps> {\n  render() {\n    return (\n      <div className=\"index-wrapper\">\n        <FrameworkBase />\n      </div>\n    );\n  }\n}\n\nexport default Index;\n"],"sourceRoot":""}